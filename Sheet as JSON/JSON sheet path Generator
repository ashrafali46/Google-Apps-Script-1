<!DOCTYPE html>
<html>
<head>
    <title>Share your Google Sheets</title>
    <style>
        .box {
            display: inline-block;
            text-align: center;
        }
        .heading{
            font-size:1.2em;
            color:white;
            background-color:black;
        }
        .row{

        }
        .mySheet, .myQuery{
            width:100%;
        }
    </style>
</head>
<body>
    <h1>Google Sheets as JSON data for your Website</h1>
    <div>
        <p>Google Sheets can be used as a source for data to your webpages. New updated API can now use Database like
            Select options to output the content.
        </p>
        <label for="mySheet">Sheet ID:</label>
        <input type="text" class="mySheet" name="mySheet" value="1EgnjzKuodX9tdwUqtW92WSdlIBZvTnrgf9cXgGGL03Y">
        <label for="sheets">Select a Sheet:</label>
        <select name="sheets" class="sheets"><br>
           
        </select><br>
        <label for="myQuery">Add a Query:</label>
        <input type="text" class="myQuery" name="myQuery">
        <br>
        <button>Request</button>
        <div class="output"></div>
    </div>
    <script src="apps4.js"></script>
</body>
</html>
const output = document.querySelector('.output');
const btn = document.querySelector('button');
const myQuery = document.querySelector('.myQuery');
const mySheet = document.querySelector('.mySheet');
const sheets = document.querySelector('.sheets');
const sheetArr = ['test1', 'Sheet2', 'Sheet6', 'people'];
sheetArr.forEach((sheet) => {
    const tempEle = makeCell(sheets, sheet, 'ele', 'option');
    tempEle.value = sheet;
})
const url = 'https://docs.google.com/spreadsheets/d/';
const q1 = '/gviz/tq?';
const q2 = 'tqx=out:json';
//const query1 = 'select A,B where C > 100 ';
//const query1 = `select A,B,C,E where E contains 'a' limit 3`;
//const query1 = `select A,B`;
//const q4 = encodeURIComponent(query1);
btn.addEventListener('click', getData);

function getData() {
    const ssid = mySheet.value;
    const q3 = `sheet=${sheets.value}`;
    let url1 = `${url}${ssid}${q1}&${q2}&${q3}`;
    if (myQuery.value.length > 0) {
        const updateCode = encodeURIComponent(myQuery.value);
        url1 += `&tq=${updateCode}`;
    }
    output.innerHTML = url1;
    fetch(url1)
        .then(res => res.text())
        .then(data => {

            const json = JSON.parse(data.substr(47).slice(0, -2));
            //console.log(json);
            const headings = makeCell(output, '', 'heading');
            let wid = 100 / json.table.cols.length;
            json.table.cols.forEach((col) => {
                console.log(col);
                const val = col.label || col.id;
                const el = makeCell(headings, val, 'box');
                el.style.width = wid + '%';
            })
            json.table.rows.forEach((row) => {
                //console.log(row);
                const div = makeCell(output, '', 'row');
                row.c.forEach((cell) => {
                    const ele1 = makeCell(div, `${cell.v}`, 'box');
                    ele1.style.width = wid + '%';
                })
            })

        })
}

function makeCell(parent, html, classAdd, eleType = 'div') {
    const ele = document.createElement(eleType);
    parent.append(ele);
    ele.innerHTML = html;
    ele.classList.add(classAdd);
    return ele;
}
